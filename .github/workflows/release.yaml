name: Release CI

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  build-liveship:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   arch: arm
          #   target: aarch64-unknown-linux-gnu
          - os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf libssl-dev

      - name: Install bun
        if: runner.os != 'Windows'
        run: |
          curl -fsSL https://bun.sh/install | bash

      - name: Install bun (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -c "irm bun.sh/install.ps1|iex"

      - name: Build web
        run: cd web && ~/.bun/bin/bun install && ~/.bun/bin/bun run build

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Cargo build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.arch }}-${{ matrix.os }}
          path: ./target/${{ matrix.target }}/release/liveship${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release-liveship:
    needs: build-liveship
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Query version number
        run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: art*
          path: artifacts
          

      - name: Rename artifacts
        run: |
          mkdir -p artifacts/release
          mv "artifacts/artifacts-x86_64-ubuntu-latest/liveship" "artifacts/release/liveship_${{ env.version }}_linux_x86_64"
          # mv "artifacts/artifacts-aarch64-ubuntu-latest/liveship" "artifacts/release/liveship_${{ env.version }}_linux_aarch64"
          mv "artifacts/artifacts-x86_64-windows-latest/liveship.exe" "artifacts/release/liveship_${{ env.version }}_windows_x86_64.exe"
          mv "artifacts/artifacts-x86_64-macos-latest/liveship" "artifacts/release/liveship_${{ env.version }}_macos_x86_64"
          mv "artifacts/artifacts-aarch64-macos-latest/liveship" "artifacts/release/liveship_${{ env.version }}_macos_aarch64"

      - name: Create Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          name: v${{ env.version }}
          body: See the assets to download this version and install.
          prerelease: false
          generate_release_notes: false
          files: ./artifacts/release/*
